name: PR Checks

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '18'

jobs:
  # PR Quality Checks
  pr-quality:
    name: PR Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check commit messages
        uses: wagoid/commitlint-github-action@v5

      - name: Check for breaking changes
        run: |
          # Check if package.json versions changed
          git diff HEAD~1 HEAD --name-only | grep -q "package.json" && echo "Package.json changed - review for breaking changes"

      - name: Lint changed files only
        run: |
          # Check if there are changes in apps/ or packages/
          CHANGED_APPS=$(git diff --name-only HEAD~1 HEAD | grep -E '^apps/' | head -1)
          CHANGED_PACKAGES=$(git diff --name-only HEAD~1 HEAD | grep -E '^packages/' | head -1)
          
          if [ ! -z "$CHANGED_APPS" ] || [ ! -z "$CHANGED_PACKAGES" ]; then
            echo "Running lint on changed workspaces..."
            npm run lint
          else
            echo "No changes in apps or packages, skipping lint"
          fi

  # Test Coverage Check
  coverage-check:
    name: Coverage Check
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          NODE_ENV: test
          DATABASE_URL: mongodb://localhost:27017/health_bridge_test

      - name: Coverage Comment
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info
          delete-old-comments: true

  # Security Review
  security-review:
    name: Security Review
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Check for secrets in code
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD

  # Performance Impact Check
  performance-check:
    name: Performance Impact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build and analyze bundle
        run: |
          npm run build
          # Add bundle size analysis here
          echo "Bundle analysis complete"

      - name: Analyze bundle size
        run: |
          echo "Bundle analysis completed"
          echo "Frontend build size:"
          du -sh apps/frontend/.next/ || echo "Frontend not built yet"
          echo "Backend build size:"
          du -sh apps/backend/dist/ || echo "Backend not built yet"

  # Healthcare Compliance Check
  compliance-check:
    name: Healthcare Compliance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for HIPAA compliance patterns
        run: |
          # Check for potential HIPAA violations
          echo "Checking for hardcoded patient data..."
          if grep -r "patient.*123-45-6789\|john.*doe.*1990" apps/ --exclude-dir=node_modules; then
            echo "❌ Found potential hardcoded patient data"
            exit 1
          fi
          
          echo "Checking for proper encryption patterns..."
          if grep -r "password.*=.*['\"]" apps/ --exclude-dir=node_modules --exclude="*.test.*" --exclude="*.spec.*"; then
            echo "❌ Found potential hardcoded passwords"
            exit 1
          fi
          
          echo "✅ Basic compliance checks passed"

      - name: Check for proper error handling
        run: |
          # Ensure medical data errors don't leak sensitive info
          echo "Checking error handling patterns..."
          if grep -r "console\.log.*patient\|console\.log.*medical" apps/ --exclude-dir=node_modules --exclude="*.test.*"; then
            echo "⚠️ Found console.log statements with potential medical data"
            exit 1
          fi

  # Auto-assign reviewers
  assign-reviewers:
    name: Assign Reviewers
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:
      - name: Auto-assign reviewers
        uses: kentaro-m/auto-assign-action@v1.2.5
        with:
          configuration-path: '.github/auto-assign.yml'

  # PR Size Check
  pr-size-check:
    name: PR Size Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check PR size
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | wc -l)
          ADDED_LINES=$(git diff --stat HEAD~1 HEAD | tail -1 | grep -o '[0-9]\+ insertion' | grep -o '[0-9]\+' || echo 0)
          
          echo "Files changed: $CHANGED_FILES"
          echo "Lines added: $ADDED_LINES"
          
          if [ "$CHANGED_FILES" -gt 50 ] || [ "$ADDED_LINES" -gt 1000 ]; then
            echo "⚠️ Large PR detected. Consider breaking it into smaller PRs."
            echo "Files: $CHANGED_FILES (recommended: <50)"
            echo "Lines: $ADDED_LINES (recommended: <1000)"
          else
            echo "✅ PR size is reasonable"
          fi